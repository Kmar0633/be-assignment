// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int             @id @default(autoincrement())
  username        String          @unique
  password        String
  paymentAccounts PaymentAccount[]
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
}

model PaymentAccount {
  id              Int             @id @default(autoincrement())
  type            String          // e.g., credit, debit, loan
  balance         Float           @default(0)
  userId          Int
  user            User            @relation(fields: [userId], references: [id])
  paymentHistory  PaymentHistory[]
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
}

model PaymentHistory {
  id              Int             @id @default(autoincrement())
  amount          Float
  timestamp       DateTime        @default(now())
  paymentAccountId Int
  paymentAccount  PaymentAccount  @relation(fields: [paymentAccountId], references: [id])
}

model Transaction {
  id          Int       @id @default(autoincrement())
  amount      Float
  timestamp   DateTime  @default(now())
  toAddress   String
  status      String    // e.g., pending, completed, failed
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}